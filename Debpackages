#We can see all Debpackages of different ID's depending on its Secondaryid or its ID
Match Debpackages=(n:Snapshot)where  n.timestamp=1476251450.163124  RETURN Debpackages


Match Debpackages=(n:Snapshot)where  n.timestamp=1476251498.780832  RETURN Debpackages

Match Debpackages=(n:Snapshot)where  n.timestamp=1476251536.653907  RETURN Debpackages

Match Debpackages=(n:Snapshot)where  n.timestamp=1476251575.287575  RETURN Debpackages

Match Debpackages=(n:Snapshot)where  n.timestamp=1476251611.363332  RETURN Debpackages


or

Match Debpackages=(n:Snapshot)where  n.secondary_id= "50" RETURN Debpackages
Match Debpackages=(n:Snapshot)where  n.secondary_id= "51" RETURN Debpackages
Match Debpackages=(n:Snapshot)where  n.secondary_id= "52" RETURN Debpackages
Match Debpackages=(n:Snapshot)where  n.secondary_id= "53" RETURN Debpackages
Match Debpackages=(n:Snapshot)where  n.secondary_id= "54" RETURN Debpackages


#And if we wanted we can view Package names
MATCH (n) WHERE EXISTS(n.name) RETURN DISTINCT "node" as element, n.name AS name LIMIT 25 UNION ALL MATCH ()-[r]-() WHERE EXISTS(r.name) RETURN DISTINCT "relationship" AS element, r.name AS name LIMIT 25

#How to know the base

Match (base:Snapshot{secondary_id})<-[:Snapshot]-(:Debpackages)<-[:Contains]-(name),(name)-(:#This is a relationship of other id you are comparing)->(n2)-[:Snapshot],(name)-(:#This is a relationship of other id you are comparing)->(n3)-[:Snapshot],(name)-(:#This is a relationship of other id you are comparing)->(n4)-[:Snapshot],(:#This is a relationship that you are comparing )->(n5)[:Snapshot]->[secondary_id:Snapshots] WHERE NOT (name)-[:Contains]-[:#another relationship]-[:#another relationship]-[:-another relationship]-[:#another relationship]->() RETURN secondary_id

#How to gather the Pacakges and Compare 

Match(comp:Snaphot{{secondary_id:'50'}<-[:Snapshot]-(:Debpackages)<-[:Contains]-(name),(name)-(:#another relationship)->(o2)-[:Snapshot]->(name:Snapshot)) RETURN contains.name, #otherRelationship.name, count(distinct o2) as count ORDER by count DESC
